# Задача №39.
# Даны два массива чисел. Требуется вывести те элементы первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество элементов во втором массиве. Затем элементы второго массива

# Ввод:
# 7 
# 3 1 3 4 2 4 12
# 6
# 4 15 43 1 15 1 (каждое число вводится с новой строки)
# Вывод:
# 3 3 2 12


first_list = [int(input()) for _ in range(int(input('Введите кол-во чисел: ')))]
second_list = [int(input()) for _ in range(int(input('Введите кол-во чисел: ')))]

for el in first_list:
    if el not in second_list:
        print(el)

second_list = set(second_list)
for el in first_list:
    if el not in second_list:
        print(el)

# Задача №41.
# Дан массив, состоящий из целых чисел. Напишите программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.

# Ввод:
# 5             5
# 1 2 3 4 5     1 5 1 5 1
# Вывод:
# 0             2


some_list = [int(input()) for _ in range(int(input('Введите кол-во чисел: ')))]
count = 0
for ind in range(1, len(some_list) - 1):
    if some_list[ind - 1] < some_list[ind] > some_list[ind + 1]:
        count += 1
print(count)

# Задача №43.
# Дан список чисел. Посчитайте, сколько в нем пар элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару, которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных строках.

# Ввод: 
# 1 2 3 2 3
# Вывод:
# 2


some_list = []
while True:
    number = int(input())
    if number == 0:
        break
    some_list.append(number)

count_dict = {}  # 2: 2, 3: 3, 4: 1, 5: 1

for el in some_list:
    if count_dict.get(el):
        count_dict[el] += 1
    else:
        count_dict[el] = 1

count = 0
for value in count_dict.values():
    count += value // 2
print(count)

some_dict = {1: 4, 4: 8}
print(some_dict.get(5, 'Такого ключа нет!'))

# Задача №45.
# Два различных натуральных числа n и m называются дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не превосходящее 105. Программа должна вывести все
# пары дружественных чисел, каждое из которых не превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть выведена только один раз (перестановка чисел новую
# пару не дает).

# Ввод: 
# 300 
# Вывод:
# 220 284

def sum_div(n):
    summa = 0
    for i in range(1, n // 2 + 1):
        if n % i == 0:
            summa += i
    return summa


summ_dict = {}  # 284: 220,

k = int(input())
for number in range(2, k + 1):
    if number in summ_dict:
        if sum_div(number) == summ_dict[number]:
            print(number, summ_dict[number])
    summ_dict[sum_div(number)] = number